{"version":3,"sources":["contexts/userContext.js","api/index.js","pages/login.jsx","components/form.jsx","components/careProvider.jsx","components/careProviderList.jsx","pages/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","userInfo","setUserInfo","Provider","value","children","instance","axios","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","AlertMessage","status","variant","flexDirection","alignItems","justifyContent","textAlign","position","top","width","fontSize","Login","showAlert","setShowAlert","isLoading","setIsLoading","useContext","history","useHistory","showErrorAlert","setTimeout","h","visible","backgroundColor","height","spacing","as","size","color","clientId","onSuccess","response","setItem","tokenId","post","then","data","push","catch","error","onFailure","Form","pinCode","setPinCode","submitForm","direction","marginY","onChange","placeholder","colorScheme","onClick","CareProvider","provider","minWidth","borderWidth","borderRadius","overflow","className","marginX","src","alt","p","d","px","type","split","mt","fontWeight","lineHeight","isTruncated","name","address","Email","mr","cursor","email","Phone","contact","CareProviderList","margin","display","minHeight","overflowX","map","index","Home","setData","useEffect","Object","keys","length","alert","picture","trim","pin_code","Number","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75af9279.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const UserContext = createContext({});\n\nconst UserContextProvider = (props) => {\n  const [userInfo, setUserInfo] = useState({});\n  return (\n    <UserContext.Provider value={{ userInfo, setUserInfo }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import axios from \"axios\";\n\nconst baseURL = \"http://65.0.130.56:4444/api\";\n\nexport const instance = axios.create({\n  baseURL: baseURL,\n  timeout: 4000,\n});\n\ninstance.interceptors.request.use(function (config) {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = token ? `${token}` : \"\";\n  return config;\n});\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { Center, Spinner, Box, Heading, Stack } from \"@chakra-ui/react\";\nimport { Alert, AlertIcon, AlertTitle } from \"@chakra-ui/react\";\n\nimport { UserContext } from \"./../contexts/userContext\";\nimport { instance } from \"./../api\";\n\nconst Login = () => {\n  const [showAlert, setShowAlert] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { setUserInfo } = useContext(UserContext);\n\n  let history = useHistory();\n\n  const showErrorAlert = () => {\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 5000);\n  };\n\n  const googleResponseSuccess = (response) => {\n    localStorage.setItem(\"token\", response.tokenId);\n    setIsLoading(true);\n    instance\n      .post(\"/user/login\")\n      .then((response) => {\n        setUserInfo(response.data);\n        setIsLoading(false);\n        history.push(\"/home\");\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        showErrorAlert();\n      });\n  };\n\n  const googleResponseFailure = (response) => {\n    showErrorAlert();\n  };\n\n  return (\n    <Center h=\"100vh\">\n      {showAlert && <AlertMessage visible={showAlert} />}\n      <Box backgroundColor=\"gray.100\" width=\"50%\" height=\"50%\">\n        <Center h=\"100%\">\n          <Stack spacing=\"5%\">\n            <Heading as=\"h3\" size=\"md\">\n              Please login:\n            </Heading>\n            {isLoading ? (\n              <Spinner color=\"red.500\" />\n            ) : (\n              <GoogleLogin\n                clientId=\"95567586964-s70ovl5v4i8vdlss5m37ltd8t5hnqov3.apps.googleusercontent.com\"\n                onSuccess={googleResponseSuccess}\n                onFailure={googleResponseFailure}\n              />\n            )}\n          </Stack>\n        </Center>\n      </Box>\n    </Center>\n  );\n};\n\nconst AlertMessage = () => {\n  return (\n    <Alert\n      status=\"error\"\n      variant=\"subtle\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      position=\"fixed\"\n      top=\"20px\"\n      width=\"75%\"\n    >\n      <AlertIcon />\n      <AlertTitle fontSize=\"sm\">\n        Sorry, couldn't authenticate! Please try again.\n      </AlertTitle>\n    </Alert>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Stack, NumberInput, NumberInputField, Button } from \"@chakra-ui/react\";\n\nconst Form = (props) => {\n  const { pinCode, setPinCode, submitForm } = props;\n\n  return (\n    <Stack direction=\"column\" width=\"50%\">\n      <NumberInput\n        marginY=\"2%\"\n        value={pinCode}\n        onChange={(value) => {\n          setPinCode(value);\n        }}\n      >\n        <NumberInputField placeholder=\"Area pincode ex: 110001\" />\n      </NumberInput>\n\n      <Button\n        colorScheme=\"blue\"\n        width=\"200px\"\n        marginY=\"3%\"\n        onClick={() => submitForm()}\n      >\n        Search\n      </Button>\n    </Stack>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { Box, Image, Badge, Stack } from \"@chakra-ui/react\";\nimport { PhoneIcon, EmailIcon } from \"@chakra-ui/icons\";\n\nimport \"./custom.css\";\n\nconst CareProvider = (props) => {\n  const { provider } = props;\n  const imageUrl =\n    \"https://revcycleintelligence.com/images/site/article_headers/_normal/hospital%2C_green.jpg\";\n\n  return (\n    <Box\n      minWidth={[\"100%\", \"calc(90% / 2.5)\", \"calc(90% / 3)\", \"calc(90% / 4)\"]}\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      className=\"snap-scroll-child\"\n      marginX=\"20px\"\n    >\n      <Image src={imageUrl} alt=\"care provider\" />\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {provider.type.split(\".\")[1]}\n          </Badge>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {provider.name}\n        </Box>\n\n        <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n          {provider.address}\n        </Box>\n\n        <Stack direction=\"column\" spacing={0} marginY=\"3%\">\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            <EmailIcon mr=\"4px\" cursor=\"pointer\" />\n            {provider.email}\n          </Box>\n\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            <PhoneIcon mr=\"4px\" cursor=\"pointer\" />\n            {provider.contact}\n          </Box>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CareProvider;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport CareProvider from \"./careProvider\";\nimport \"./custom.css\";\n\nconst CareProviderList = (props) => {\n  const { data } = props;\n\n  return (\n    <Box\n      as=\"section\"\n      margin=\"auto\"\n      display=\"flex\"\n      width=\"100%\"\n      minHeight=\"350px\"\n      overflowX=\"auto\"\n      className=\"snapScroll\"\n    >\n      {data.map((provider, index) => {\n        return <CareProvider key={index} provider={provider} />;\n      })}\n    </Box>\n  );\n};\n\nexport default CareProviderList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Heading, Stack, Avatar, Center } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"./../contexts/userContext\";\n\nimport Form from \"./../components/form\";\nimport CareProviderList from \"../components/careProviderList\";\n\nimport { instance } from \"./../api/index\";\n\nconst Home = () => {\n  const history = useHistory();\n  const { userInfo } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const [pinCode, setPinCode] = useState(\"\");\n\n  useEffect(() => {\n    const keys = Object.keys(userInfo);\n    if (keys.length === 0) {\n      alert(\"Please login first.\");\n      history.push(\"/\");\n    }\n  });\n\n  const submitForm = () => {\n    if (pinCode.trim() === \"\") {\n      alert(\"Please enter valid pin code.\");\n    } else {\n      setIsLoading(true);\n      instance\n        .post(\"/get_network\", { pin_code: Number(pinCode) })\n        .then((response) => {\n          setIsLoading(false);\n          setData(response.data.data);\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          const response = error.response;\n          if (response && response.status === 401) {\n            alert(\"Invalid credentials.\");\n            history.push(\"/\");\n          } else {\n            alert(\"Something went wrong.\");\n          }\n        });\n    }\n  };\n\n  return (\n    <Box width=\"80%\" height=\"100vh\" margin=\"auto\">\n      <Heading as=\"h1\" size=\"2xl\" marginY=\"2%\">\n        Search healthcare providers\n      </Heading>\n      <Stack direction=\"row\" marginY=\"2%\">\n        <Avatar name={userInfo.name} src={userInfo.picture} />\n        <Heading as=\"h1\" size=\"xl\">\n          Hi {userInfo.name},\n        </Heading>\n      </Stack>\n\n      <Form pinCode={pinCode} setPinCode={setPinCode} submitForm={submitForm} />\n\n      <Center height=\"100px\">\n        {isLoading ? (\n          <p>Fetching ...</p>\n        ) : data.length === 0 ? (\n          <p>No result ...</p>\n        ) : (\n          <CareProviderList data={data} />\n        )}\n      </Center>\n    </Box>\n  );\n};\n\nexport default Home;\n","import Login from \"./pages/login\";\nimport Home from \"./pages/home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport UserContextProvider from \"./contexts/userContext\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <UserContextProvider>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n          </UserContextProvider>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}